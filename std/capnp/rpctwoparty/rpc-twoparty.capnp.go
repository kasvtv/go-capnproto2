// Code generated by capnpc-go. DO NOT EDIT.

package rpctwoparty

import (
	capnp "github.com/kasvtv/go-capnproto2/v2"
	text "github.com/kasvtv/go-capnproto2/v2/encoding/text"
	schemas "github.com/kasvtv/go-capnproto2/v2/schemas"
)

type Side uint16

// Side_TypeID is the unique identifier for the type Side.
const Side_TypeID = 0x9fd69ebc87b9719c

// Values of Side.
const (
	Side_server Side = 0
	Side_client Side = 1
)

// String returns the enum's constant name.
func (c Side) String() string {
	switch c {
	case Side_server:
		return "server"
	case Side_client:
		return "client"

	default:
		return ""
	}
}

// SideFromString returns the enum value with a name,
// or the zero value if there's no such value.
func SideFromString(c string) Side {
	switch c {
	case "server":
		return Side_server
	case "client":
		return Side_client

	default:
		return 0
	}
}

type Side_List struct{ capnp.List }

func NewSide_List(s *capnp.Segment, sz int32) (Side_List, error) {
	l, err := capnp.NewUInt16List(s, sz)
	return Side_List{l.List}, err
}

func (l Side_List) At(i int) Side {
	ul := capnp.UInt16List{List: l.List}
	return Side(ul.At(i))
}

func (l Side_List) Set(i int, v Side) {
	ul := capnp.UInt16List{List: l.List}
	ul.Set(i, uint16(v))
}

type VatId struct{ capnp.Struct }

// VatId_TypeID is the unique identifier for the type VatId.
const VatId_TypeID = 0xd20b909fee733a8e

func NewVatId(s *capnp.Segment) (VatId, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return VatId{st}, err
}

func NewRootVatId(s *capnp.Segment) (VatId, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return VatId{st}, err
}

func ReadRootVatId(msg *capnp.Message) (VatId, error) {
	root, err := msg.RootPtr()
	return VatId{root.Struct()}, err
}

func (s VatId) String() string {
	str, _ := text.Marshal(0xd20b909fee733a8e, s.Struct)
	return str
}

func (s VatId) Side() Side {
	return Side(s.Struct.Uint16(0))
}

func (s VatId) SetSide(v Side) {
	s.Struct.SetUint16(0, uint16(v))
}

// VatId_List is a list of VatId.
type VatId_List struct{ capnp.List }

// NewVatId creates a new list of VatId.
func NewVatId_List(s *capnp.Segment, sz int32) (VatId_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return VatId_List{l}, err
}

func (s VatId_List) At(i int) VatId { return VatId{s.List.Struct(i)} }

func (s VatId_List) Set(i int, v VatId) error { return s.List.SetStruct(i, v.Struct) }

func (s VatId_List) String() string {
	str, _ := text.MarshalList(0xd20b909fee733a8e, s.List)
	return str
}

// VatId_Promise is a wrapper for a VatId promised by a client call.
type VatId_Promise struct{ *capnp.Pipeline }

func (p VatId_Promise) Struct() (VatId, error) {
	s, err := p.Pipeline.Struct()
	return VatId{s}, err
}

type ProvisionId struct{ capnp.Struct }

// ProvisionId_TypeID is the unique identifier for the type ProvisionId.
const ProvisionId_TypeID = 0xb88d09a9c5f39817

func NewProvisionId(s *capnp.Segment) (ProvisionId, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return ProvisionId{st}, err
}

func NewRootProvisionId(s *capnp.Segment) (ProvisionId, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return ProvisionId{st}, err
}

func ReadRootProvisionId(msg *capnp.Message) (ProvisionId, error) {
	root, err := msg.RootPtr()
	return ProvisionId{root.Struct()}, err
}

func (s ProvisionId) String() string {
	str, _ := text.Marshal(0xb88d09a9c5f39817, s.Struct)
	return str
}

func (s ProvisionId) JoinId() uint32 {
	return s.Struct.Uint32(0)
}

func (s ProvisionId) SetJoinId(v uint32) {
	s.Struct.SetUint32(0, v)
}

// ProvisionId_List is a list of ProvisionId.
type ProvisionId_List struct{ capnp.List }

// NewProvisionId creates a new list of ProvisionId.
func NewProvisionId_List(s *capnp.Segment, sz int32) (ProvisionId_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return ProvisionId_List{l}, err
}

func (s ProvisionId_List) At(i int) ProvisionId { return ProvisionId{s.List.Struct(i)} }

func (s ProvisionId_List) Set(i int, v ProvisionId) error { return s.List.SetStruct(i, v.Struct) }

func (s ProvisionId_List) String() string {
	str, _ := text.MarshalList(0xb88d09a9c5f39817, s.List)
	return str
}

// ProvisionId_Promise is a wrapper for a ProvisionId promised by a client call.
type ProvisionId_Promise struct{ *capnp.Pipeline }

func (p ProvisionId_Promise) Struct() (ProvisionId, error) {
	s, err := p.Pipeline.Struct()
	return ProvisionId{s}, err
}

type RecipientId struct{ capnp.Struct }

// RecipientId_TypeID is the unique identifier for the type RecipientId.
const RecipientId_TypeID = 0x89f389b6fd4082c1

func NewRecipientId(s *capnp.Segment) (RecipientId, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return RecipientId{st}, err
}

func NewRootRecipientId(s *capnp.Segment) (RecipientId, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return RecipientId{st}, err
}

func ReadRootRecipientId(msg *capnp.Message) (RecipientId, error) {
	root, err := msg.RootPtr()
	return RecipientId{root.Struct()}, err
}

func (s RecipientId) String() string {
	str, _ := text.Marshal(0x89f389b6fd4082c1, s.Struct)
	return str
}

// RecipientId_List is a list of RecipientId.
type RecipientId_List struct{ capnp.List }

// NewRecipientId creates a new list of RecipientId.
func NewRecipientId_List(s *capnp.Segment, sz int32) (RecipientId_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return RecipientId_List{l}, err
}

func (s RecipientId_List) At(i int) RecipientId { return RecipientId{s.List.Struct(i)} }

func (s RecipientId_List) Set(i int, v RecipientId) error { return s.List.SetStruct(i, v.Struct) }

func (s RecipientId_List) String() string {
	str, _ := text.MarshalList(0x89f389b6fd4082c1, s.List)
	return str
}

// RecipientId_Promise is a wrapper for a RecipientId promised by a client call.
type RecipientId_Promise struct{ *capnp.Pipeline }

func (p RecipientId_Promise) Struct() (RecipientId, error) {
	s, err := p.Pipeline.Struct()
	return RecipientId{s}, err
}

type ThirdPartyCapId struct{ capnp.Struct }

// ThirdPartyCapId_TypeID is the unique identifier for the type ThirdPartyCapId.
const ThirdPartyCapId_TypeID = 0xb47f4979672cb59d

func NewThirdPartyCapId(s *capnp.Segment) (ThirdPartyCapId, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return ThirdPartyCapId{st}, err
}

func NewRootThirdPartyCapId(s *capnp.Segment) (ThirdPartyCapId, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return ThirdPartyCapId{st}, err
}

func ReadRootThirdPartyCapId(msg *capnp.Message) (ThirdPartyCapId, error) {
	root, err := msg.RootPtr()
	return ThirdPartyCapId{root.Struct()}, err
}

func (s ThirdPartyCapId) String() string {
	str, _ := text.Marshal(0xb47f4979672cb59d, s.Struct)
	return str
}

// ThirdPartyCapId_List is a list of ThirdPartyCapId.
type ThirdPartyCapId_List struct{ capnp.List }

// NewThirdPartyCapId creates a new list of ThirdPartyCapId.
func NewThirdPartyCapId_List(s *capnp.Segment, sz int32) (ThirdPartyCapId_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return ThirdPartyCapId_List{l}, err
}

func (s ThirdPartyCapId_List) At(i int) ThirdPartyCapId { return ThirdPartyCapId{s.List.Struct(i)} }

func (s ThirdPartyCapId_List) Set(i int, v ThirdPartyCapId) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s ThirdPartyCapId_List) String() string {
	str, _ := text.MarshalList(0xb47f4979672cb59d, s.List)
	return str
}

// ThirdPartyCapId_Promise is a wrapper for a ThirdPartyCapId promised by a client call.
type ThirdPartyCapId_Promise struct{ *capnp.Pipeline }

func (p ThirdPartyCapId_Promise) Struct() (ThirdPartyCapId, error) {
	s, err := p.Pipeline.Struct()
	return ThirdPartyCapId{s}, err
}

type JoinKeyPart struct{ capnp.Struct }

// JoinKeyPart_TypeID is the unique identifier for the type JoinKeyPart.
const JoinKeyPart_TypeID = 0x95b29059097fca83

func NewJoinKeyPart(s *capnp.Segment) (JoinKeyPart, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return JoinKeyPart{st}, err
}

func NewRootJoinKeyPart(s *capnp.Segment) (JoinKeyPart, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return JoinKeyPart{st}, err
}

func ReadRootJoinKeyPart(msg *capnp.Message) (JoinKeyPart, error) {
	root, err := msg.RootPtr()
	return JoinKeyPart{root.Struct()}, err
}

func (s JoinKeyPart) String() string {
	str, _ := text.Marshal(0x95b29059097fca83, s.Struct)
	return str
}

func (s JoinKeyPart) JoinId() uint32 {
	return s.Struct.Uint32(0)
}

func (s JoinKeyPart) SetJoinId(v uint32) {
	s.Struct.SetUint32(0, v)
}

func (s JoinKeyPart) PartCount() uint16 {
	return s.Struct.Uint16(4)
}

func (s JoinKeyPart) SetPartCount(v uint16) {
	s.Struct.SetUint16(4, v)
}

func (s JoinKeyPart) PartNum() uint16 {
	return s.Struct.Uint16(6)
}

func (s JoinKeyPart) SetPartNum(v uint16) {
	s.Struct.SetUint16(6, v)
}

// JoinKeyPart_List is a list of JoinKeyPart.
type JoinKeyPart_List struct{ capnp.List }

// NewJoinKeyPart creates a new list of JoinKeyPart.
func NewJoinKeyPart_List(s *capnp.Segment, sz int32) (JoinKeyPart_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return JoinKeyPart_List{l}, err
}

func (s JoinKeyPart_List) At(i int) JoinKeyPart { return JoinKeyPart{s.List.Struct(i)} }

func (s JoinKeyPart_List) Set(i int, v JoinKeyPart) error { return s.List.SetStruct(i, v.Struct) }

func (s JoinKeyPart_List) String() string {
	str, _ := text.MarshalList(0x95b29059097fca83, s.List)
	return str
}

// JoinKeyPart_Promise is a wrapper for a JoinKeyPart promised by a client call.
type JoinKeyPart_Promise struct{ *capnp.Pipeline }

func (p JoinKeyPart_Promise) Struct() (JoinKeyPart, error) {
	s, err := p.Pipeline.Struct()
	return JoinKeyPart{s}, err
}

type JoinResult struct{ capnp.Struct }

// JoinResult_TypeID is the unique identifier for the type JoinResult.
const JoinResult_TypeID = 0x9d263a3630b7ebee

func NewJoinResult(s *capnp.Segment) (JoinResult, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return JoinResult{st}, err
}

func NewRootJoinResult(s *capnp.Segment) (JoinResult, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return JoinResult{st}, err
}

func ReadRootJoinResult(msg *capnp.Message) (JoinResult, error) {
	root, err := msg.RootPtr()
	return JoinResult{root.Struct()}, err
}

func (s JoinResult) String() string {
	str, _ := text.Marshal(0x9d263a3630b7ebee, s.Struct)
	return str
}

func (s JoinResult) JoinId() uint32 {
	return s.Struct.Uint32(0)
}

func (s JoinResult) SetJoinId(v uint32) {
	s.Struct.SetUint32(0, v)
}

func (s JoinResult) Succeeded() bool {
	return s.Struct.Bit(32)
}

func (s JoinResult) SetSucceeded(v bool) {
	s.Struct.SetBit(32, v)
}

func (s JoinResult) Cap() (capnp.Pointer, error) {
	return s.Struct.Pointer(0)
}

func (s JoinResult) HasCap() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s JoinResult) CapPtr() (capnp.Ptr, error) {
	return s.Struct.Ptr(0)
}

func (s JoinResult) SetCap(v capnp.Pointer) error {
	return s.Struct.SetPointer(0, v)
}

func (s JoinResult) SetCapPtr(v capnp.Ptr) error {
	return s.Struct.SetPtr(0, v)
}

// JoinResult_List is a list of JoinResult.
type JoinResult_List struct{ capnp.List }

// NewJoinResult creates a new list of JoinResult.
func NewJoinResult_List(s *capnp.Segment, sz int32) (JoinResult_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return JoinResult_List{l}, err
}

func (s JoinResult_List) At(i int) JoinResult { return JoinResult{s.List.Struct(i)} }

func (s JoinResult_List) Set(i int, v JoinResult) error { return s.List.SetStruct(i, v.Struct) }

func (s JoinResult_List) String() string {
	str, _ := text.MarshalList(0x9d263a3630b7ebee, s.List)
	return str
}

// JoinResult_Promise is a wrapper for a JoinResult promised by a client call.
type JoinResult_Promise struct{ *capnp.Pipeline }

func (p JoinResult_Promise) Struct() (JoinResult, error) {
	s, err := p.Pipeline.Struct()
	return JoinResult{s}, err
}

func (p JoinResult_Promise) Cap() *capnp.Pipeline {
	return p.Pipeline.GetPipeline(0)
}

const schema_a184c7885cdaf2a1 = "x\xda|\x92\xcdk\xd4\\\x14\xc6\xcfs2\xf3\xce\x0c" +
	"\xafeL\xef\x80 \x8a\xe2BPT\x14A!\x9b\x8c" +
	"\x16\xc1h+s\xc7V\x14\xdc\x84\xe4\xa2\x91\x9a\xa4I" +
	"\xa62\xab\x01\x15\xb4\x0b\xa5\x1b\xc1\x85\xb5t\xd9\x95(" +
	"\xd6\x0fp\xa3 B\x97.\\\xf8/\x08]\xb4\xbb\x11" +
	"\x89$`G\xe6\xc3\xdd\xc9\xe1w\x1e~\xe7\xe4\xee\xfc" +
	"Y\xe7\x13\xc5\x80\x89\xe4\x9e\xe2\x7f\xe9\xc7\xbb\xf5_o" +
	"\x16\xb6\x16H\x17HW6\xbf_\x7f\xf8\xe5\xfe\x0a\x15" +
	"JDb/\xba\xe2\x10J\xa4\xa5\xf7\xd6;\x95k\x8b" +
	"\xaf\x9e\x90\x14\xe8\xa7\x8a\xe8\x0a\x1dY5\x86\x17\x84t" +
	"\xe3\xc7\xdb\xe3\xa7\x8c\x83K}l1GV\xb1)\xd6" +
	"\xf2\xeae\x0e?\x9b{\xff\xe0\xc3\xf3o\xcb\xa4\x0b\xee" +
	"\xb1\x041\xc5\x9f\xc4\x0cg\xa0\xe4\xd3\x84ti\xed\xc8" +
	"\x8d\xb6\xd5y=\xa8yr\x86wC(\xce<w=" +
	"\xdd\xfa\xbcZy\xf4n\x98\xe7\x19\xee\x8a\xa9<\xd1b" +
	"\x93\x90>6\xe2\x8d\xe5\xc5\xff\xbf\x0ec=^\x17\xad" +
	"\x9c\x9d\xcb\xd9(t\x8e&w\x82\x90\xed(i\x1fs" +
	"\xec\xd0\x0f\x8d\xa6r\xbc\xd0\xf4\x94\x9fXn\x03\xc3\x99" +
	"\x0b\x81\xe7_4U\xbbaGI\x03\x90;\xb4\x02Q" +
	"\x01D\xfa9\x83H\xd65\xc8I\x86\x0e\xae!kZ" +
	"M\"y^\x83\x9cf\xe8\xac\xd5\xc0D\xba<K$" +
	"'5\xc8\xab\x0c\xf3V\xe0\xf9\x96\x8b21\xca\x844" +
	"\xb4\xa3d\"h\xf9\x84\x04%b\x94\x08\x9d\xacw\xa9" +
	"u\xfb\xcf\xf7H\xaf\xe6>\x15\xb7f\xff\xa9\xb5\x7fP" +
	"+S\xcd\xad\x0e\x8c\xb6\x8a[\x8e\xa3\x94\xab\x08.@" +
	"\x0c\x10J\x8e\x1db\x9c\x18\xe3#\x8c.{\xae\xa2\xcc" +
	"\xa5\x9c\xc7\xeb\x06\x11\xa0W\x0c\"3V\xd1\xbc\x8aL" +
	"g6\xbb\xf5\xf6\xb0\xf6\xd7\xf0\xf4M/r\xb3\x1b\xb7" +
	"'\xecP\x1b\xfd;\x1aQ0\xef\x99\xb1\x17\xf89#" +
	"\x0b\xdb{\x8fe{\x975\xc8\xda\xe0:\xc3\x92\xae\xd8" +
	"\x89\xe5\x12\xf5\x85\x1c\xee\x85Tc\xcfU\xa8\xf6\x1e8" +
	"\x01U\xc2\xef\x00\x00\x00\xff\xffED\xf3/"

func init() {
	schemas.Register(schema_a184c7885cdaf2a1,
		0x89f389b6fd4082c1,
		0x95b29059097fca83,
		0x9d263a3630b7ebee,
		0x9fd69ebc87b9719c,
		0xb47f4979672cb59d,
		0xb88d09a9c5f39817,
		0xd20b909fee733a8e)
}
